{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { bisect } from 'd3-array';\n\nvar DiscreteScale = function () {\n  function DiscreteScale() {\n    var _this = this;\n\n    _classCallCheck(this, DiscreteScale);\n\n    this.getValue = function (x) {\n      var range = _this.range,\n          domain = _this.domain,\n          n = _this.n;\n      return range[bisect(domain, x, 0, n)];\n    };\n\n    this.setDomain = function (val) {\n      _this.x0 = +val[0];\n      _this.x1 = +val[1];\n\n      _this.rescale();\n\n      return _this;\n    };\n\n    this.setRange = function (val) {\n      _this.range = val.slice();\n      _this.n = _this.range.length - 1;\n      return _this;\n    };\n\n    this.x0 = 0;\n    this.x1 = 1;\n    this.domain = [0.5];\n    this.range = [0, 1];\n    this.n = 1;\n  }\n\n  DiscreteScale.prototype.rescale = function rescale() {\n    var x0 = this.x0,\n        x1 = this.x1,\n        n = this.n;\n    var i = -1;\n    this.domain = new Array(n);\n\n    while (++i < n) {\n      this.domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    }\n  };\n\n  return DiscreteScale;\n}();\n\nexport default DiscreteScale;","map":{"version":3,"sources":["C:/Users/manny/fyp/ui/node_modules/react-compound-slider/es/Slider/DiscreteScale.js"],"names":["_classCallCheck","instance","Constructor","TypeError","bisect","DiscreteScale","_this","getValue","x","range","domain","n","setDomain","val","x0","x1","rescale","setRange","slice","length","prototype","i","Array"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,MAAT,QAAuB,UAAvB;;AAEA,IAAIC,aAAa,GAAG,YAAY;AAC9B,WAASA,aAAT,GAAyB;AACvB,QAAIC,KAAK,GAAG,IAAZ;;AAEAN,IAAAA,eAAe,CAAC,IAAD,EAAOK,aAAP,CAAf;;AAEA,SAAKE,QAAL,GAAgB,UAAUC,CAAV,EAAa;AAC3B,UAAIC,KAAK,GAAGH,KAAK,CAACG,KAAlB;AAAA,UACIC,MAAM,GAAGJ,KAAK,CAACI,MADnB;AAAA,UAEIC,CAAC,GAAGL,KAAK,CAACK,CAFd;AAIA,aAAOF,KAAK,CAACL,MAAM,CAACM,MAAD,EAASF,CAAT,EAAY,CAAZ,EAAeG,CAAf,CAAP,CAAZ;AACD,KAND;;AAQA,SAAKC,SAAL,GAAiB,UAAUC,GAAV,EAAe;AAC9BP,MAAAA,KAAK,CAACQ,EAAN,GAAW,CAACD,GAAG,CAAC,CAAD,CAAf;AACAP,MAAAA,KAAK,CAACS,EAAN,GAAW,CAACF,GAAG,CAAC,CAAD,CAAf;;AACAP,MAAAA,KAAK,CAACU,OAAN;;AAEA,aAAOV,KAAP;AACD,KAND;;AAQA,SAAKW,QAAL,GAAgB,UAAUJ,GAAV,EAAe;AAC7BP,MAAAA,KAAK,CAACG,KAAN,GAAcI,GAAG,CAACK,KAAJ,EAAd;AACAZ,MAAAA,KAAK,CAACK,CAAN,GAAUL,KAAK,CAACG,KAAN,CAAYU,MAAZ,GAAqB,CAA/B;AAEA,aAAOb,KAAP;AACD,KALD;;AAOA,SAAKQ,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AAEA,SAAKL,MAAL,GAAc,CAAC,GAAD,CAAd;AACA,SAAKD,KAAL,GAAa,CAAC,CAAD,EAAI,CAAJ,CAAb;AAEA,SAAKE,CAAL,GAAS,CAAT;AACD;;AAEDN,EAAAA,aAAa,CAACe,SAAd,CAAwBJ,OAAxB,GAAkC,SAASA,OAAT,GAAmB;AACnD,QAAIF,EAAE,GAAG,KAAKA,EAAd;AAAA,QACIC,EAAE,GAAG,KAAKA,EADd;AAAA,QAEIJ,CAAC,GAAG,KAAKA,CAFb;AAKA,QAAIU,CAAC,GAAG,CAAC,CAAT;AAEA,SAAKX,MAAL,GAAc,IAAIY,KAAJ,CAAUX,CAAV,CAAd;;AAEA,WAAO,EAAEU,CAAF,GAAMV,CAAb,EAAgB;AACd,WAAKD,MAAL,CAAYW,CAAZ,IAAiB,CAAC,CAACA,CAAC,GAAG,CAAL,IAAUN,EAAV,GAAe,CAACM,CAAC,GAAGV,CAAL,IAAUG,EAA1B,KAAiCH,CAAC,GAAG,CAArC,CAAjB;AACD;AACF,GAbD;;AAeA,SAAON,aAAP;AACD,CAtDmB,EAApB;;AAwDA,eAAeA,aAAf","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { bisect } from 'd3-array';\n\nvar DiscreteScale = function () {\n  function DiscreteScale() {\n    var _this = this;\n\n    _classCallCheck(this, DiscreteScale);\n\n    this.getValue = function (x) {\n      var range = _this.range,\n          domain = _this.domain,\n          n = _this.n;\n\n      return range[bisect(domain, x, 0, n)];\n    };\n\n    this.setDomain = function (val) {\n      _this.x0 = +val[0];\n      _this.x1 = +val[1];\n      _this.rescale();\n\n      return _this;\n    };\n\n    this.setRange = function (val) {\n      _this.range = val.slice();\n      _this.n = _this.range.length - 1;\n\n      return _this;\n    };\n\n    this.x0 = 0;\n    this.x1 = 1;\n\n    this.domain = [0.5];\n    this.range = [0, 1];\n\n    this.n = 1;\n  }\n\n  DiscreteScale.prototype.rescale = function rescale() {\n    var x0 = this.x0,\n        x1 = this.x1,\n        n = this.n;\n\n\n    var i = -1;\n\n    this.domain = new Array(n);\n\n    while (++i < n) {\n      this.domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    }\n  };\n\n  return DiscreteScale;\n}();\n\nexport default DiscreteScale;"]},"metadata":{},"sourceType":"module"}