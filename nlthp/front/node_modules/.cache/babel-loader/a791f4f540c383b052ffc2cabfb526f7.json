{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manny\\\\2021-ca400-idelegi2-puzzuos2\\\\src\\\\ui\\\\src\\\\components\\\\cards\\\\Card.jsx\";\nimport React from 'react';\n/**\r\n * Card component which represents the private Poker game cards \r\n * dealt to the User and the Community cards dealt on the table.\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  const {\n    cardData: {\n      suit,\n      cardFace,\n      animationDelay\n    },\n    setFoldedClassName\n  } = props; // get suit of card\n\n  var suitOfCard = suit.substring(0, 1).toUpperCase();\n\n  const matchFace = card => {\n    var face;\n\n    switch (card) {\n      case 'A':\n        face = \"Ace\";\n\n      case '2':\n        face = \"Two\";\n\n      case '3':\n        face = \"Three\";\n\n      case '4':\n        face = \"Four\";\n\n      case '5':\n        face = \"Five\";\n\n      case '6':\n        face = \"Six\";\n\n      case '7':\n        face = \"Seven\";\n\n      case 'K':\n        face = \"King\";\n\n      case '8':\n        face = \"Eight\";\n\n      case '9':\n        face = \"Nine\";\n\n      case '10':\n        face = \"Ten\";\n\n      case 'J':\n        face = \"Jack\";\n\n      case 'Q':\n        face = \"Queen\";\n    }\n\n    return face;\n  }; // display card according to value and suit given\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `poker-card cardIn ${determineName(setFoldedClassName)}`,\n    style: {\n      animationDelay: `${determineStall(setFoldedClassName, animationDelay)}ms`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/assets/cardFaces/${cardFace}${suitOfCard}.svg`,\n      alt: `${matchFace(cardFace)} of ${suit}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n/* \r\nSelects the class name depending on \r\nthe state of the players cards.\r\n*/\n\n\n_c = Card;\n\nfunction determineName(className) {\n  if (className) {\n    return ' folded';\n  } else {\n    return '';\n  }\n}\n/* \r\nDetermines how long the stall animations \r\ntakes to complete.\r\n*/\n\n\nfunction determineStall(name, time) {\n  if (name) {\n    return 0;\n  } else {\n    return time;\n  }\n}\n\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/manny/2021-ca400-idelegi2-puzzuos2/src/ui/src/components/cards/Card.jsx"],"names":["React","Card","props","cardData","suit","cardFace","animationDelay","setFoldedClassName","suitOfCard","substring","toUpperCase","matchFace","card","face","determineName","determineStall","process","env","PUBLIC_URL","className","name","time"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AACJC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IADQ;AAERC,MAAAA,QAFQ;AAGRC,MAAAA;AAHQ,KADN;AAMJC,IAAAA;AANI,MAOFL,KAPJ,CADsB,CAUtB;;AACA,MAAIM,UAAU,GAAGJ,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,WAArB,EAAjB;;AAEA,QAAMC,SAAS,GAAIC,IAAD,IAAU;AAC1B,QAAIC,IAAJ;;AACA,YAAOD,IAAP;AACE,WAAK,GAAL;AACEC,QAAAA,IAAI,GAAG,KAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,KAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,OAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,MAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,MAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,KAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,OAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,MAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,OAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,MAAP;;AACF,WAAK,IAAL;AACEA,QAAAA,IAAI,GAAG,KAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,MAAP;;AACF,WAAK,GAAL;AACEA,QAAAA,IAAI,GAAG,OAAP;AA1BJ;;AA6BA,WAAOA,IAAP;AACD,GAhCD,CAbsB,CA+CtB;;;AACA,sBACE;AACE,IAAA,SAAS,EAAG,qBAAoBC,aAAa,CAACP,kBAAD,CAAqB,EADpE;AAEE,IAAA,KAAK,EACH;AAACD,MAAAA,cAAc,EAAG,GAAES,cAAc,CAACR,kBAAD,EAAqBD,cAArB,CAAqC;AAAvE,KAHJ;AAAA,2BAKE;AAAK,MAAA,GAAG,EAAG,GAAEU,OAAO,CAACC,GAAR,CAAYC,UAAW,qBAAoBb,QAAS,GAAEG,UAAW,MAA9E;AAAqF,MAAA,GAAG,EAAG,GAAEG,SAAS,CAACN,QAAD,CAAW,OAAMD,IAAK;AAA5H;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzDD;AA2DA;AACA;AACA;AACA;;;KA9DMH,I;;AA+DN,SAASa,aAAT,CAAuBK,SAAvB,EAAiC;AAC/B,MAAIA,SAAJ,EAAe;AACb,WAAO,SAAP;AACD,GAFD,MAGK;AACH,WAAO,EAAP;AACD;AACF;AAED;AACA;AACA;AACA;;;AACA,SAASJ,cAAT,CAAwBK,IAAxB,EAA8BC,IAA9B,EAAoC;AAClC,MAAGD,IAAH,EAAS;AACP,WAAO,CAAP;AACD,GAFD,MAGI;AACF,WAAOC,IAAP;AACD;AACF;;AAED,eAAepB,IAAf","sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * Card component which represents the private Poker game cards \r\n * dealt to the User and the Community cards dealt on the table.\r\n */\r\nconst Card = (props) => {\r\n  const {\r\n    cardData: {\r\n      suit,\r\n      cardFace,\r\n      animationDelay\r\n    },\r\n    setFoldedClassName\r\n  } = props;\r\n\r\n  // get suit of card\r\n  var suitOfCard = suit.substring(0, 1).toUpperCase();\r\n\r\n  const matchFace = (card) => {\r\n    var face\r\n    switch(card){\r\n      case 'A':\r\n        face = \"Ace\"\r\n      case '2':\r\n        face = \"Two\"\r\n      case '3':\r\n        face = \"Three\"\r\n      case '4':\r\n        face = \"Four\"\r\n      case '5':\r\n        face = \"Five\"\r\n      case '6':\r\n        face = \"Six\"\r\n      case '7':\r\n        face = \"Seven\"\r\n      case 'K':\r\n        face = \"King\"\r\n      case '8':\r\n        face = \"Eight\"\r\n      case '9':\r\n        face = \"Nine\"\r\n      case '10':\r\n        face = \"Ten\"\r\n      case 'J':\r\n        face = \"Jack\"\r\n      case 'Q':\r\n        face = \"Queen\"\r\n    }\r\n    \r\n    return face\r\n  }\r\n\r\n  // display card according to value and suit given\r\n  return (\r\n    <div \r\n      className={`poker-card cardIn ${determineName(setFoldedClassName)}`}\r\n      style={\r\n        {animationDelay: `${determineStall(setFoldedClassName, animationDelay)}ms` }\r\n        }>\r\n      <img src={`${process.env.PUBLIC_URL}/assets/cardFaces/${cardFace}${suitOfCard}.svg`} alt={`${matchFace(cardFace)} of ${suit}s`}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\n/* \r\nSelects the class name depending on \r\nthe state of the players cards.\r\n*/\r\nfunction determineName(className){\r\n  if (className) {\r\n    return ' folded'\r\n  }\r\n  else {\r\n    return ''\r\n  }\r\n}\r\n\r\n/* \r\nDetermines how long the stall animations \r\ntakes to complete.\r\n*/\r\nfunction determineStall(name, time) {\r\n  if(name) {\r\n    return 0\r\n  }\r\n  else{\r\n    return time\r\n  }\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}