{"ast":null,"code":"import _objectSpread from\"C:/Users/manny/2021-ca400-idelegi2-puzzuos2/src/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Handles,Rail,Slider,Tracks}from'react-compound-slider';import Handle from\"../components/raiseBar/Controller\";import{railStyle,sliderStyle}from\"../components/raiseBar/styles\";import Track from\"../components/raiseBar/Tracker\";import{calculateMinBet}from'./betService.js';/** \r\n* The uiService provides services to handle\r\n* UI animations assignments and renderings.\r\n*/ /* \r\n Set next game phase\r\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var makePhaseStatement=function makePhaseStatement(phase){switch(phase){case'loading':return'Finding a Table, Please Wait';case'initialDeal':return'Dealing out the cards';case'betting1':return'Betting 1';case'flop':return'Flop';case'betting2':return'Flop';case'turn':return'Turn';case'betting3':return'Turn';case'river':return'River';case'betting4':return'River';case'showdown':return'Show Your Cards!';default:throw Error('Unfamiliar phase returned from makePhaseStatement()');}};/* \r\n Render Action Button text (Fold, Call, Raise, All in, etc.)\r\n*/var makeActionButtonText=function makeActionButtonText(highBet,betInputValue,activePlayer){if(highBet===0&&betInputValue===0){return'Check';}else if(highBet===betInputValue){return'Call';}else if(betInputValue<highBet||betInputValue===activePlayer.chips+activePlayer.bet){return'All-in!';}else if(betInputValue>highBet){return'Raise';}};/* \r\n Show player winning after each hand\r\n*/var makeNetPlayerEarnings=function makeNetPlayerEarnings(endChips,startChips){var netChipEarnings=endChips-startChips;var win=netChipEarnings>0;var none=netChipEarnings===0;return/*#__PURE__*/_jsx(\"div\",{class:\"showdown-player-earnings \".concat(win?'positive':none?'':'negative'),children:\"\".concat(win?'+':'').concat(netChipEarnings)});};/* \r\n Show Showdown messages\r\n*/var makeShowdownMessages=function makeShowdownMessages(showDownMessages){return showDownMessages.map(function(message,index){var users=message.users,prize=message.prize,rank=message.rank;if(users.length>1){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-div\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-user\",children:\"\".concat(users.length,\" players \")}),/*#__PURE__*/_jsx(\"span\",{className:\"message-content\",children:\"split the pot with a \"}),/*#__PURE__*/_jsx(\"span\",{className:\"message-rank\",children:\"\".concat(rank,\"!\")})]}),users.map(function(user){return/*#__PURE__*/_jsxs(\"div\",{class:\"message-div\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-player\",children:\"\".concat(user,\" \")}),/*#__PURE__*/_jsx(\"span\",{className:\"message-content\",children:\"takes \"}),/*#__PURE__*/_jsx(\"span\",{className:\"message-earnings\",children:\"\".concat(prize,\" chips \")}),/*#__PURE__*/_jsx(\"span\",{className:\"message-content\",children:\"from the pot.\"})]},index+user);})]},index);}else if(users.length===1){return/*#__PURE__*/_jsxs(\"div\",{className:\"message-div\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-player\",children:\"\".concat(users[0],\" \")}),/*#__PURE__*/_jsx(\"span\",{className:\"message-content\",children:\"wins \"}),/*#__PURE__*/_jsx(\"span\",{className:\"message-earnings\",children:\"\".concat(prize,\" chips \")}),/*#__PURE__*/_jsx(\"span\",{className:\"message-content\",children:\"from the pot with a \"}),/*#__PURE__*/_jsx(\"span\",{className:\"message-rank\",children:\"\".concat(rank,\"!\")})]},index);}});};/* \r\n Render User Action menu for actions and slider (for raising)\r\n*/var makeActionMenu=function makeActionMenu(highBet,players,activePlayerIndex,phase,changeSliderInputFn){var min=calculateMinBet(highBet,players[activePlayerIndex].chips,players[activePlayerIndex].bet);var max=players[activePlayerIndex].chips+players[activePlayerIndex].bet;return phase==='betting1'||phase==='betting2'||phase==='betting3'||phase==='betting4'?players[activePlayerIndex].robot?/*#__PURE__*/_jsxs(\"h4\",{className:\"current-move-head\",children:[\" \",\"Current Move: \".concat(players[activePlayerIndex].name)]}):/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Slider,{rootStyle:sliderStyle,domain:[min,max],values:[min],step:1,onChange:changeSliderInputFn,mode:2,children:[/*#__PURE__*/_jsx(Rail,{children:function children(_ref){var getRailProps=_ref.getRailProps;return/*#__PURE__*/_jsx(\"div\",_objectSpread({style:railStyle},getRailProps()));}}),/*#__PURE__*/_jsx(Handles,{children:function children(_ref2){var handles=_ref2.handles,getHandleProps=_ref2.getHandleProps;return/*#__PURE__*/_jsx(\"div\",{className:\"slider-handles\",children:handles.map(function(handle){return/*#__PURE__*/_jsx(Handle,{handle:handle,getHandleProps:getHandleProps},handle.id);})});}}),/*#__PURE__*/_jsx(Tracks,{right:false,children:function children(_ref3){var tracks=_ref3.tracks,getTrackProps=_ref3.getTrackProps;return/*#__PURE__*/_jsx(\"div\",{className:\"slider-tracks\",children:tracks.map(function(_ref4){var id=_ref4.id,source=_ref4.source,target=_ref4.target;return/*#__PURE__*/_jsx(Track,{source:source,target:target,getTrackProps:getTrackProps},id);})});}})]})}):null;};export{makePhaseStatement,makeShowdownMessages,makeNetPlayerEarnings,makeActionMenu,makeActionButtonText};","map":{"version":3,"sources":["C:/Users/manny/2021-ca400-idelegi2-puzzuos2/src/ui/src/services/uiService.js"],"names":["React","Handles","Rail","Slider","Tracks","Handle","railStyle","sliderStyle","Track","calculateMinBet","makePhaseStatement","phase","Error","makeActionButtonText","highBet","betInputValue","activePlayer","chips","bet","makeNetPlayerEarnings","endChips","startChips","netChipEarnings","win","none","makeShowdownMessages","showDownMessages","map","message","index","users","prize","rank","length","user","makeActionMenu","players","activePlayerIndex","changeSliderInputFn","min","max","robot","name","getRailProps","handles","getHandleProps","handle","id","tracks","getTrackProps","source","target"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Handles, Rail, Slider, Tracks } from 'react-compound-slider';\r\nimport Handle from \"../components/raiseBar/Controller\";\r\nimport { railStyle, sliderStyle } from \"../components/raiseBar/styles\";\r\nimport Track from \"../components/raiseBar/Tracker\";\r\nimport {\r\n\tcalculateMinBet\r\n} from './betService.js';\r\n\r\n/** \r\n* The uiService provides services to handle\r\n* UI animations assignments and renderings.\r\n*/\r\n\r\n\r\n/* \r\n Set next game phase\r\n*/\r\nconst makePhaseStatement = (phase) => {\r\n\tswitch (phase) {\r\n\t\tcase ('loading'): return 'Finding a Table, Please Wait';\r\n\t\tcase ('initialDeal'): return 'Dealing out the cards';\r\n\t\tcase ('betting1'): return 'Betting 1';\r\n\t\tcase ('flop'): return 'Flop';\r\n\t\tcase ('betting2'): return 'Flop';\r\n\t\tcase ('turn'): return 'Turn';\r\n\t\tcase ('betting3'): return 'Turn';\r\n\t\tcase ('river'): return 'River';\r\n\t\tcase ('betting4'): return 'River';\r\n\t\tcase ('showdown'): return 'Show Your Cards!';\r\n\t\tdefault: throw Error('Unfamiliar phase returned from makePhaseStatement()');\r\n\t}\r\n}\r\n\r\n/* \r\n Render Action Button text (Fold, Call, Raise, All in, etc.)\r\n*/\r\nconst makeActionButtonText = (highBet, betInputValue, activePlayer) => {\r\n\tif ((highBet === 0) && (betInputValue === 0)) {\r\n\t\treturn 'Check'\r\n\t} else if ((highBet === betInputValue)) {\r\n\t\treturn 'Call'\r\n\t} else if ((betInputValue < highBet) || (betInputValue === activePlayer.chips + activePlayer.bet)) {\r\n\t\treturn 'All-in!'\r\n\t} else if ((betInputValue > highBet)) {\r\n\t\treturn 'Raise'\r\n\t}\r\n}\r\n\r\n/* \r\n Show player winning after each hand\r\n*/\r\nconst makeNetPlayerEarnings = (endChips, startChips) => {\r\n\tconst netChipEarnings = (endChips - startChips);\r\n\tconst win = (netChipEarnings > 0);\r\n\tconst none = (netChipEarnings === 0);\r\n\treturn (\r\n\t\t<div class={`showdown-player-earnings ${(win) ? ('positive') : (none) ? ('') : ('negative')}`}>\r\n\t\t\t{`${(win) ? ('+') : ('')}${netChipEarnings}`}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n/* \r\n Show Showdown messages\r\n*/\r\nconst makeShowdownMessages = (showDownMessages) => {\r\n\treturn showDownMessages.map((message, index) => {\r\n\t\tconst { users, prize, rank } = message;\r\n\t\tif (users.length > 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t<div className=\"message-div\">\r\n\t\t\t\t\t\t<span className=\"message-user\">\r\n\t\t\t\t\t\t\t{`${users.length} players `}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"message-content\">\r\n\t\t\t\t\t\t\t{`split the pot with a `}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"message-rank\">\r\n\t\t\t\t\t\t\t{`${rank}!`}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tusers.map(user => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={index + user} class=\"message-div\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"message-player\">\r\n\t\t\t\t\t\t\t\t\t\t{`${user} `}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"message-content\">\r\n\t\t\t\t\t\t\t\t\t\t{`takes `}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"message-earnings\">\r\n\t\t\t\t\t\t\t\t\t\t{`${prize} chips `}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"message-content\">\r\n\t\t\t\t\t\t\t\t\t\t{`from the pot.`}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)\r\n\t\t} else if (users.length === 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={index} className=\"message-div\">\r\n\t\t\t\t\t<span className=\"message-player\">\r\n\t\t\t\t\t\t{`${users[0]} `}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className=\"message-content\">\r\n\t\t\t\t\t\t{`wins `}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className=\"message-earnings\">\r\n\t\t\t\t\t\t{`${prize} chips `}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className=\"message-content\">\r\n\t\t\t\t\t\t{`from the pot with a `}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className=\"message-rank\">\r\n\t\t\t\t\t\t{`${rank}!`}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t})\r\n}\r\n\r\n/* \r\n Render User Action menu for actions and slider (for raising)\r\n*/\r\nconst makeActionMenu = (highBet, players, activePlayerIndex, phase, changeSliderInputFn) => {\r\n\tconst min = calculateMinBet(highBet, players[activePlayerIndex].chips, players[activePlayerIndex].bet)\r\n\tconst max = players[activePlayerIndex].chips + players[activePlayerIndex].bet\r\n\treturn (\r\n\t\t(phase === 'betting1' || phase === 'betting2' || phase === 'betting3' || phase === 'betting4') ? (players[activePlayerIndex].robot) ? (<h4 className=\"current-move-head\"> {`Current Move: ${players[activePlayerIndex].name}`}</h4>) : (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Slider\r\n\t\t\t\t\trootStyle={sliderStyle}\r\n\t\t\t\t\tdomain={[min, max]}\r\n\t\t\t\t\tvalues={[min]}\r\n\t\t\t\t\tstep={1}\r\n\r\n\t\t\t\t\tonChange={changeSliderInputFn}\r\n\t\t\t\t\tmode={2}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Rail>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t({ getRailProps }) => (\r\n\t\t\t\t\t\t\t\t<div style={railStyle} {...getRailProps()} />\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Rail>\r\n\t\t\t\t\t<Handles>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t({ handles, getHandleProps }) => (\r\n\t\t\t\t\t\t\t\t<div className='slider-handles'>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\thandles.map(handle => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Handle\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={handle.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\thandle={handle}\r\n\t\t\t\t\t\t\t\t\t\t\t\tgetHandleProps={getHandleProps}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Handles>\r\n\t\t\t\t\t<Tracks right={false}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t({ tracks, getTrackProps }) => (\r\n\t\t\t\t\t\t\t\t<div className='slider-tracks'>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\ttracks.map(\r\n\t\t\t\t\t\t\t\t\t\t\t({ id, source, target }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Track\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsource={source}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget={target}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetTrackProps={getTrackProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Tracks>\r\n\t\t\t\t</Slider>\r\n\t\t\t</React.Fragment>\r\n\t\t) : null\r\n\t)\r\n}\r\n\r\nexport {\r\n\tmakePhaseStatement,\r\n\tmakeShowdownMessages,\r\n\tmakeNetPlayerEarnings,\r\n\tmakeActionMenu,\r\n\tmakeActionButtonText\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}