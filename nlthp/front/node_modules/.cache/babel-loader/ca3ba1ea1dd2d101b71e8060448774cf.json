{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manny\\\\2021-ca400-idelegi2-puzzuos2\\\\src\\\\ui\\\\src\\\\components\\\\cards\\\\Card.jsx\";\nimport React from 'react';\n/**\r\n * Card component which represents the private Poker game cards \r\n * dealt to the User and the Community cards dealt on the table.\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  const {\n    cardData: {\n      suit,\n      cardFace\n    }\n  } = props; // get suit of card\n\n  var suitOfCard = suit.substring(0, 1).toUpperCase(); // display card according to value and suit given\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `poker-card cardIn ${determineName(setFoldedClassName)}`,\n    style: {\n      stallAnimation: `${determineStall(setFoldedClassName, stallAnimation)}ms`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/assets/cardFaces/${cardFace}${suitOfCard}.svg`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n/* \r\nSelects the class name depending on \r\nthe state of the players cards.\r\n*/\n\n\n_c = Card;\n\nfunction determineName(className) {\n  if (className) {\n    return ' folded';\n  } else {\n    return '';\n  }\n}\n/* \r\nDetermines how long the stall animations \r\ntakes to complete.\r\n*/\n\n\nfunction determineStall(name, time) {\n  if (name) {\n    return 0;\n  } else {\n    return time;\n  }\n}\n\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/manny/2021-ca400-idelegi2-puzzuos2/src/ui/src/components/cards/Card.jsx"],"names":["React","Card","props","cardData","suit","cardFace","suitOfCard","substring","toUpperCase","determineName","setFoldedClassName","stallAnimation","determineStall","process","env","PUBLIC_URL","className","name","time"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AACJC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IADQ;AAERC,MAAAA;AAFQ;AADN,MAKFH,KALJ,CADsB,CAQtB;;AACA,MAAII,UAAU,GAAGF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,WAArB,EAAjB,CATsB,CAWtB;;AACA,sBACE;AACE,IAAA,SAAS,EAAG,qBAAoBC,aAAa,CAACC,kBAAD,CAAqB,EADpE;AAEE,IAAA,KAAK,EACH;AAACC,MAAAA,cAAc,EAAG,GAAEC,cAAc,CAACF,kBAAD,EAAqBC,cAArB,CAAqC;AAAvE,KAHJ;AAAA,2BAKE;AAAK,MAAA,GAAG,EAAG,GAAEE,OAAO,CAACC,GAAR,CAAYC,UAAW,qBAAoBV,QAAS,GAAEC,UAAW;AAA9E;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CArBD;AAuBA;AACA;AACA;AACA;;;KA1BML,I;;AA2BN,SAASQ,aAAT,CAAuBO,SAAvB,EAAiC;AAC/B,MAAIA,SAAJ,EAAe;AACb,WAAO,SAAP;AACD,GAFD,MAGK;AACH,WAAO,EAAP;AACD;AACF;AAED;AACA;AACA;AACA;;;AACA,SAASJ,cAAT,CAAwBK,IAAxB,EAA8BC,IAA9B,EAAoC;AAClC,MAAGD,IAAH,EAAS;AACP,WAAO,CAAP;AACD,GAFD,MAGI;AACF,WAAOC,IAAP;AACD;AACF;;AAED,eAAejB,IAAf","sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * Card component which represents the private Poker game cards \r\n * dealt to the User and the Community cards dealt on the table.\r\n */\r\nconst Card = (props) => {\r\n  const {\r\n    cardData: {\r\n      suit,\r\n      cardFace,\r\n    }\r\n  } = props;\r\n\r\n  // get suit of card\r\n  var suitOfCard = suit.substring(0, 1).toUpperCase();\r\n\r\n  // display card according to value and suit given\r\n  return (\r\n    <div \r\n      className={`poker-card cardIn ${determineName(setFoldedClassName)}`}\r\n      style={\r\n        {stallAnimation: `${determineStall(setFoldedClassName, stallAnimation)}ms` }\r\n        }>\r\n      <img src={`${process.env.PUBLIC_URL}/assets/cardFaces/${cardFace}${suitOfCard}.svg`}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\n/* \r\nSelects the class name depending on \r\nthe state of the players cards.\r\n*/\r\nfunction determineName(className){\r\n  if (className) {\r\n    return ' folded'\r\n  }\r\n  else {\r\n    return ''\r\n  }\r\n}\r\n\r\n/* \r\nDetermines how long the stall animations \r\ntakes to complete.\r\n*/\r\nfunction determineStall(name, time) {\r\n  if(name) {\r\n    return 0\r\n  }\r\n  else{\r\n    return time\r\n  }\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}